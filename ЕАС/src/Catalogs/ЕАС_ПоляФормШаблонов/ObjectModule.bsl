#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
	
Процедура ПередЗаписью(Отказ)
	
	ЕАС_ОбластиДанныхКопируемый.НазначитьОбластьДанных(ЭтотОбъект);
	
	ЕАС_ОбменВызовСервераКопируемый.ЗарегистрироватьИзмененияСправочника(ЭтотОбъект);
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	ПроверкаУникальности(Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Перем ПараметрВладелец, ЗначениеКопирования;
	
	Если ТипЗнч(ДанныеЗаполнения)= Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Владелец", ПараметрВладелец) Тогда
			Владелец = ПараметрВладелец;       
			
		ИначеЕсли  ДанныеЗаполнения.Свойство("ЗначениеКопирования", ЗначениеКопирования)
						И ТипЗнч(ЗначениеКопирования) = ТипЗнч(Ссылка) Тогда	
			Для Каждого Реквизит Из ЗначениеКопирования.Метаданные().Реквизиты Цикл
				ЭтотОбъект[Реквизит.Имя] = ЗначениеКопирования[Реквизит.Имя]; 
			КонецЦикла;
			Владелец = ЗначениеКопирования.Владелец;
		КонецЕсли;
		
	КонецЕсли;         
	
	Если Не ЗначениеЗаполнено(Источник) Тогда
		Источник = Перечисления.ЕАС_ВидыИсточниковДанных.Факт;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала    = НачалоГода(ТекущаяДатаСеанса());
		ДатаОкончания = КонецГода(ТекущаяДатаСеанса());
	КонецЕсли;	
		
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	ЕАС_ОбменВызовСервераКопируемый.ЗарегистрироватьИзмененияСправочника(ЭтотОбъект);
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверкаУникальности(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ПоляФормШаблонов.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ЕАС_ПоляФормШаблонов КАК ПоляФормШаблонов
	               |ГДЕ
	               |	ПоляФормШаблонов.Владелец = &Владелец
	               |	И ПоляФормШаблонов.ПоказательОтчета = &ПоказательОтчета
	               |	И ПоляФормШаблонов.Источник = &Источник
	               |	И ПоляФормШаблонов.ДатаНачала = &ДатаНачала
	               |	И ПоляФормШаблонов.ДатаОкончания = &ДатаОкончания
	               |	И ПоляФормШаблонов.ЕдиницаИзмерения = &ЕдиницаИзмерения
	               |	И ПоляФормШаблонов.ДопПараметр = &ДопПараметр
	               |	И ПоляФормШаблонов.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Владелец",               Владелец);
	Запрос.УстановитьПараметр("ПоказательОтчета",       ПоказательОтчета);
	Запрос.УстановитьПараметр("ЕдиницаИзмерения",       ЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Источник",               Источник);
	Запрос.УстановитьПараметр("ДатаНачала",             ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",          ДатаОкончания);
	Запрос.УстановитьПараметр("ДопПараметр", ДопПараметр);
	Запрос.УстановитьПараметр("Ссылка", 				Ссылка);
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		ТекстСообщения = НСтр("ru = 'Элемент с такими параметрами расчета уже имеется.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти

#КонецЕсли
