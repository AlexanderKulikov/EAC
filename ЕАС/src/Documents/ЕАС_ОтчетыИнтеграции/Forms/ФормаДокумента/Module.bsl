
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПредыдущийШаблон = Объект.Шаблон;
	
	УстановитьУсловноеОформление();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ХранилищеДанных = ЕАС_ОбщегоНазначенияКопируемый.ПолучитьПрисоединенныеДанные(ТекущийОбъект.Ссылка, Перечисления.ЕАС_ВидыПрисоединенныхДанных.ТабличныйДокумент);
	
	Если ЗначениеЗаполнено(ХранилищеДанных) Тогда 
		Результат = ХранилищеДанных.Получить();
	КонецЕсли;
	
	УстановитьДопРеквизитыТабличнойЧасти();
	
КонецПроцедуры                                  

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЕАС_ОбщегоНазначенияКопируемый.ЗаписатьПрисоединенныеДанные(ТекущийОбъект.Ссылка, Перечисления.ЕАС_ВидыПрисоединенныхДанных.ТабличныйДокумент, Результат);
	УстановитьДопРеквизитыТабличнойЧасти();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЭтоАдресВременногоХранилища(АдресПолейШаблона) Тогда
		УдалитьИзВременногоХранилища(АдресПолейШаблона);
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметрыОтчета

&НаКлиенте
Процедура ПараметрыОтчетаЗначениеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.РассчитанныеПоказатели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПолеФормы) Тогда
		
		Если ТекущиеДанные.ВозможнаРучнаяКорректировка Тогда
			ИмяПоля = ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.ИмяЯчейкиПоСсылке(ТекущиеДанные.ПолеФормы);
			Область = Результат.Области.Найти(ИмяПоля);
			Если Область <> Неопределено Тогда                 
				Область.Значение = ТекущиеДанные.Значение;
				ТекущиеДанные.УстановленоВручную = Истина;
			КонецЕсли;
		Иначе
			ПоказатьПредупреждение(, НСтр("ru='Корректировка значения запрещена. Изменение не будет отражено в документе.'"));
		КонецЕсли;
		
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыРассчитанныеПоказатели

&НаКлиенте
Процедура РассчитанныеПоказателиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РассчитанныеПоказателиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийТабличногоДокумента

&НаКлиенте
Процедура РезультатПриАктивизации(Элемент)
	
	ТекущаяОбласть = Элемент.ТекущаяОбласть;
	Элемент.Редактирование = Ложь;
	
	ОписаниеПоля = ОписаниеПоляШаблона(АдресПолейШаблона, ТекущаяОбласть.Имя);
	Если ТипЗнч(ОписаниеПоля) = Тип("Структура") Тогда
		Если ОписаниеПоля.РучнаяКорректировка Тогда
			Элемент.Редактирование = Истина;
			ТекущаяОбласть.СодержитЗначение = Истина;
			ТекущаяОбласть.ТипЗначения = Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15, ОписаниеПоля.ТочностьЧисла));
			ТекущаяОбласть.Формат = "ЧН=;ЧДЦ=" + ОписаниеПоля.ТочностьЧисла;
		КонецЕсли;				
	КонецЕсли;                  
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ОписаниеПоля = ОписаниеПоляШаблона(АдресПолейШаблона, Область.Имя);
	Если ТипЗнч(ОписаниеПоля) = Тип("Структура") Тогда
		ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.УстановитьПоказатель(Объект.РассчитанныеПоказатели, ОписаниеПоля, Область.Значение, Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции               

&НаСервере
Процедура УстановитьУсловноеОформление()
 
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();     
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РассчитанныеПоказателиЗначение.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РассчитанныеПоказатели.ВозможнаРучнаяКорректировка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();     
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РассчитанныеПоказатели.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РассчитанныеПоказатели.ВозможнаРучнаяКорректировка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноСиний);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДопРеквизитыТабличнойЧасти()
	
	МассивПолей = Новый Массив;
	СоответствиеПолей = Новый Соответствие;
	Для Каждого СтрокаПоказателя Из Объект.РассчитанныеПоказатели Цикл
		МассивПолей.Добавить(СтрокаПоказателя.ПолеФормы);
		СоответствиеПолей.Вставить(СтрокаПоказателя.ПолеФормы, СтрокаПоказателя); 
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоляФормШаблонов.Ссылка КАК Ссылка,
		|	ПоляФормШаблонов.РучнаяКорректировка КАК ВозможнаРучнаяКорректировка
		|ИЗ
		|	Справочник.ЕАС_ПоляФормШаблонов КАК ПоляФормШаблонов
		|ГДЕ
		|	ПоляФормШаблонов.Ссылка В(&ПоляФорм)";
	
	Запрос.УстановитьПараметр("ПоляФорм", МассивПолей);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		СтрокаПоказателя = СоответствиеПолей.Получить(РезультатЗапроса.Ссылка);
		СтрокаПоказателя.ВозможнаРучнаяКорректировка = РезультатЗапроса.ВозможнаРучнаяКорректировка;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеПоляШаблона(АдресПолейШаблона, ИмяЯчейки)
	Если ЭтоАдресВременногоХранилища(АдресПолейШаблона) Тогда
		ТаблицаПолейШаблона = ПолучитьИзВременногоХранилища(АдресПолейШаблона);
	КонецЕсли;
	
	Если ТипЗнч(ТаблицаПолейШаблона) = Тип("ТаблицаЗначений") Тогда
		ПараметрыОтбора = Новый Структура("ИмяЯчейки", ИмяЯчейки);
		СтрокиТаблицыПолей = ТаблицаПолейШаблона.НайтиСтроки(ПараметрыОтбора);
		Если СтрокиТаблицыПолей.Количество() > 0 Тогда
			ОписаниеПолей = Новый Структура();
			СтрокаТаблицыПолей = СтрокиТаблицыПолей[0];
			Для Каждого Колонка Из ТаблицаПолейШаблона.Колонки Цикл
				ОписаниеПолей.Вставить(Колонка.Имя, СтрокаТаблицыПолей[Колонка.Имя]);
			КонецЦикла;
			Возврат ОписаниеПолей;
		КонецЕсли;	
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Функция ПечатьОтчета(ПараметрыПечати) Экспорт
	ЗаголовокФормы = СтрШаблон(НСтр("ru = 'Отчет ЕАС %1 от %2: шаблон - %3'" ),
										ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Объект.Номер),
										Формат(Объект.Дата,"ДЛФ=D"),
										Объект.Шаблон);
	
	ПараметрыПечатиТекущие = Новый Структура;                                       
	ПараметрыПечатиТекущие.Вставить("ЕАС_ТабличныйДокумент", Результат);
	ПараметрыПечатиТекущие.Вставить("ЗаголовокФормы",        ЗаголовокФормы);
	ПараметрыПечатиТекущие.Вставить("ЕАС_Шаблон",            Объект.Шаблон);
	
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ПараметрыПечати.МенеджерПечати,
													"ОтчетЕАС",
													ПараметрыПечати.ОбъектыПечати,
													ЭтотОбъект,
													ПараметрыПечатиТекущие);
													
    //   Обработчик печати.
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
