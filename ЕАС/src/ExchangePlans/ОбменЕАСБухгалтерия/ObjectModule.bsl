#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Код) И Не ЭтотУзел Тогда
		ТекстОшибки = НСтр("ru = 'Код должен был заполнен'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,
		   	ЭтотОбъект,
   			"Код",
			,                      
   			Отказ);            
	КонецЕсли;
		
	Если ЕАС_ОбменСерверПовтИспКопируемый.КодЭтогоУзла("ОбменЕАСБухгалтерия") = КодКорреспондента Тогда
		ТекстОшибки = НСтр("ru = 'Коды главных узлов текущая и корреспондента должны быть разные.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,
			   	ЭтотОбъект,
   				"КодКорреспондента",
				,
   				Отказ);  
	КонецЕсли;	
		
	Если Не Отказ Тогда	
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	    	           |	ОбменЕАСБухгалтерия.Ссылка КАК Ссылка
	        	       |ИЗ
	            	   |	ПланОбмена.ОбменЕАСБухгалтерия КАК ОбменЕАСБухгалтерия
		               |ГДЕ
		               |	ОбменЕАСБухгалтерия.Код = &Код
	    	           |	И ОбменЕАСБухгалтерия.Ссылка <> &Ссылка";
	
		Запрос.УстановитьПараметр("Код", Код);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
		Если Не Запрос.Выполнить().Пустой() Тогда
			ТекстОшибки = НСтр("ru = 'Код должен был уникален.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,
			   	ЭтотОбъект,
   				"Код",
				,
   				Отказ);  
			КонецЕсли;	
			
	КонецЕсли;

	Если Не Отказ И ЭтоТестоваяИБ Тогда	
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	    	           |	ОбменЕАСБухгалтерия.Ссылка КАК Ссылка
	        	       |ИЗ
	            	   |	ПланОбмена.ОбменЕАСБухгалтерия КАК ОбменЕАСБухгалтерия
		               |ГДЕ
		               |	ОбменЕАСБухгалтерия.ЭтоТестоваяИБ 
	    	           |	И ОбменЕАСБухгалтерия.Ссылка <> &Ссылка";
	
		Запрос.УстановитьПараметр("Код", Код);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.Следующий() Тогда
				ТекстОшибки = СтрШаблон(НСтр("ru = 'Тестовая ИБ может быть только одна! (Уже назначен узел ""%1""'"), Выборка.Ссылка);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,
				   	ЭтотОбъект,
   					"ЭтоТестоваяИБ",
					,
	   				Отказ);  
			КонецЕсли;	
		КонецЕсли;	
			
	КонецЕсли;
		
	Если Не Отказ И Не ЭтотУзел И ЗначениеЗаполнено(ВебАдрес) Тогда	
		ВебАдрес = СокрЛП(ВебАдрес);
		
		Запрос.УстановитьПараметр("ВебАдрес", ВебАдрес);
		Запрос.УстановитьПараметр("Ссылка",   Ссылка);
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	    	           |	ОбменЕАСБухгалтерия.Ссылка КАК Ссылка
	        	       |ИЗ
	            	   |	ПланОбмена.ОбменЕАСБухгалтерия КАК ОбменЕАСБухгалтерия
		               |ГДЕ
		               |	ОбменЕАСБухгалтерия.ВебАдрес = &ВебАдрес
	    	           |	И ОбменЕАСБухгалтерия.Ссылка <> &Ссылка";
	
		Запрос.УстановитьПараметр("ВебАдрес", ВебАдрес);
		Запрос.УстановитьПараметр("Ссылка",   Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.Следующий() Тогда
				ТекстОшибки = СтрШаблон(НСтр("ru = 'Дублирование веб адреса запрещено! (Уже используется в узле ""%1""'"), Выборка.Ссылка);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,
				   	ЭтотОбъект,
   					"ВебАдрес",
					,
	   				Отказ);  
			КонецЕсли;	
		КонецЕсли;	
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ЭтотУзел Тогда
		НомерКодКорреспондента = ПроверяемыеРеквизиты.Найти("КодКорреспондента");
		Если НомерКодКорреспондента <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(НомерКодКорреспондента);
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
